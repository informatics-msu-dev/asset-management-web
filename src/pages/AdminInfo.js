import { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import { ref, onValue } from "firebase/database";
import { db } from "../firebase";
import { XCircle, LogOut, UserCogIcon, ChartArea, Archive, Package } from "lucide-react";



const AdminInfo = () => {
    const [admins, setAdmins] = useState([]);
    const [repairRequests, setRepairRequests] = useState([]);
    const [topics, setTopics] = useState({}); // Mapping ‡∏£‡∏´‡∏±‡∏™‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á -> ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
    const [selectedAdmin, setSelectedAdmin] = useState(null);
    const [adminStats, setAdminStats] = useState({});
    const navigate = useNavigate();

    useEffect(() => {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏≤‡∏Å "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
        onValue(ref(db, "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"), (snapshot) => {
            if (snapshot.exists()) {
                const userData = snapshot.val();
                const adminList = Object.values(userData).filter(user => 
                    user.‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á === "‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå" ||
                    user.‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á === "‡∏ô‡∏±‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡πÇ‡∏™‡∏ï‡∏ó‡∏±‡∏®‡∏ô‡∏®‡∏∂‡∏Å‡∏©‡∏≤" ||
                    user.‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á === "‡∏ä‡πà‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ");
                setAdmins(adminList);
                adminList.forEach(admin => {
                    console.log(`Admin: ${admin.‡∏ä‡∏∑‡πà‡∏≠}, Profile Image:`, admin.‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå);
                });
            }
        });

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°
        onValue(ref(db, "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°"), (snapshot) => {
            if (snapshot.exists()) {
                setRepairRequests(Object.values(snapshot.val()));
            }
        });

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠ mapping ‡∏£‡∏´‡∏±‡∏™‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á -> ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
        onValue(ref(db, "‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"), (snapshot) => {
            if (snapshot.exists()) {
                const topicData = snapshot.val();
                const topicMap = {};
                Object.values(topicData).forEach(topic => {
                    if (topic["‡∏£‡∏´‡∏±‡∏™‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"] && topic["‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"]) {
                        topicMap[topic["‡∏£‡∏´‡∏±‡∏™‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"]] = topic["‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"];
                    }
                });
                setTopics(topicMap);
            }
        });
    }, []);

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏´‡∏±‡∏™‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
    const getTopicName = (topicId) => {
        return topics[topicId] || topicId;
    };

    const openPopup = (admin) => {
        setSelectedAdmin(admin);

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        const repairsHandled = repairRequests.filter(req => req["‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"] === admin.‡∏≠‡∏µ‡πÄ‡∏°‡∏•);

        // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏°
        const topicStats = repairsHandled.reduce((acc, request) => {
            const topicId = request["‡∏£‡∏´‡∏±‡∏™‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
            acc[topicId] = (acc[topicId] || 0) + 1;
            return acc;
        }, {});

        // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏°
        const equipmentStats = repairsHandled.reduce((acc, request) => {
            const equipment = request["‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
            acc[equipment] = (acc[equipment] || 0) + 1;
            return acc;
        }, {});

        setAdminStats({
            totalHandled: repairsHandled.length,
            topicStats: topicStats,
            equipmentStats: equipmentStats,
        });
    };

    const closePopup = () => {
        setSelectedAdmin(null);
        setAdminStats({});
    };

    return (
        <div className="flex min-h-screen bg-pageBG">
            {/* Sidebar */}
            <aside className="fixed top-0 left-0 w-64 h-screen text-white p-5 flex flex-col shadow-lg bg-sidebarBG">
                <h2 className="text-xl font-bold mb-6">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏-‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå</h2>
                <ul className="space-y-4 flex-1">
                    <li>
                        <Link to="/dashboard" className="flex items-center p-2 rounded-lg hover:bg-sidebarHover w-full text-left">
                            <ChartArea className="w-5 h-5 mr-3" /> ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°
                        </Link>
                    </li>
                    <li>
                        <Link to="/equipment" className="flex items-center p-2 rounded-lg hover:bg-sidebarHover w-full text-left">
                            <Archive className="w-5 h-5 mr-3" /> ‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå
                        </Link>
                    </li>
                    <li>
                        <Link to="/supplies" className="flex items-center p-2 rounded-lg hover:bg-sidebarHover w-full text-left">
                            <Package className="w-5 h-5 mr-3" /> ‡∏û‡∏±‡∏™‡∏î‡∏∏
                        </Link>
                    </li>
                    <li>
                        <Link to="/registerUser" className="flex items-center p-2 rounded-lg hover:bg-sidebarHover w-full text-left">
                            <UserCogIcon className="w-5 h-5 mr-3" /> ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                        </Link>
                    </li>
                    <li>
                        <Link to="/adminInfo" className="flex items-center p-2 rounded-lg bg-sidebarHover hover:bg-sidebarHover w-full text-left">
                            <UserCogIcon className="w-5 h-5 mr-3" /> ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
                        </Link>
                    </li>
                </ul>
                <button onClick={() => localStorage.removeItem("token") || navigate("/login")} className="flex items-center w-full text-left p-2 bg-logoutBT rounded-lg hover:bg-logoutBT-80 mt-auto">
                    <LogOut className="w-5 h-5 mr-3" /> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </aside>

            {/* Main Content */}
            <div className="ml-64 p-6 w-full flex flex-col items-center">
                <h1 className="text-2xl font-bold mb-6 text-center">üë®‚Äçüíº ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</h1>

                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 w-full">
                    {admins.map((admin, index) => (
                        <div
                            key={index}
                            className="p-4 bg-white shadow-lg rounded-lg flex flex-col items-center text-center cursor-pointer hover:bg-gray-200 w-full"
                            onClick={() => openPopup(admin)}
                        >
                            {/* ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
                            {/* <img 
                                src={getProfileImageSrc(admin.‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå)} 
                                alt="Profile" 
                                className="w-40 h-56 rounded-lg object-cover border" 
                                onError={(e) => { e.target.src = placeholderImage; }}
                            /> */}

                            {/* ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô */}
                            <h2 className="mt-3 text-lg font-semibold">{admin.‡∏ä‡∏∑‡πà‡∏≠}</h2>

                            {/* ‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á */}
                            <span className="mt-1 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
                                {admin.‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á}
                            </span>

                            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏≠‡∏µ‡πÄ‡∏°‡∏•) */}
                            <div className="mt-2 text-gray-600">
                                <p className="flex items-center justify-center">
                                    Email: {admin.‡∏≠‡∏µ‡πÄ‡∏°‡∏•}
                                </p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {/* Pop-up ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ */}
            {selectedAdmin && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                    <div className="bg-white p-6 rounded-lg shadow-lg w-1/2">
                        <div className="flex justify-between items-center mb-4">
                            <h2 className="text-lg font-semibold">üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á {selectedAdmin.‡∏ä‡∏∑‡πà‡∏≠}</h2>
                            <button onClick={closePopup} className="text-red-500">
                                <XCircle size={24} />
                            </button>
                        </div>

                        {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á */}
                        <p className="mb-4">
                            <strong>üìã ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</strong> {adminStats.totalHandled} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                        </p>

                        {/* ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏° */}
                        <h3 className="font-semibold mb-2">üìã ‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏°:</h3>
                        {Object.keys(adminStats.topicStats || {}).length > 0 ? (
                            <ul className="list-disc pl-6 mb-4">
                                {Object.keys(adminStats.topicStats).map((topicId, i) => (
                                    <li key={i}>
                                        {getTopicName(topicId)}: {adminStats.topicStats[topicId]} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                                    </li>
                                ))}
                            </ul>
                        ) : (
                            <p className="text-gray-500 mb-4">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á</p>
                        )}

                        {/* ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏° */}
                        <h3 className="font-semibold mb-2">üõ† ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏°:</h3>
                        {Object.keys(adminStats.equipmentStats || {}).length > 0 ? (
                            <ul className="list-disc pl-6">
                                {Object.keys(adminStats.equipmentStats).map((item, i) => (
                                    <li key={i}>
                                        {item}: {adminStats.equipmentStats[item]} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                                    </li>
                                ))}
                            </ul>
                        ) : (
                            <p className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</p>
                        )}
                    </div>
                </div>
            )}
        </div>
    );
};

export default AdminInfo;